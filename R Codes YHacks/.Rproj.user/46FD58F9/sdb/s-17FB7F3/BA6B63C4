{
    "collab_server" : "",
    "contents" : "library(mongolite)\nlibrary(twitteR)\nlibrary(stringr)\nlibrary(tm)\nrequire('sentR')\nlibrary(plyr)\nlibrary(rjson)\nlibrary(RKlout)\n\nmongoURLLocal<-\"mongodb://localhost\"\n\n\n\n#########################################Klout APIs#################################################\n\nklout_api_key = 'ta3nc6y9pvnsbk7fsaw6kg7t'\n#########################################Klout  APIs#################################################\n\n\n\n#################################################################################################\n####################################Twitter Auth#################################################\napi_key = 'RUmPyAIYfK9eMzIavtopngC21'\napi_secret = 'pHIFNMYpzqzIgxnHAXdrXAU75fCg1foTruHCV3lkM8BGwTyBBM'\naccess_token = '2405586890-T11ug4N2p1qBFNBuNHLnc63zEsOw5vQUmqtcFAP'\naccess_token_secret = '59Qd4Ew50ssNeYcNfrT6HxvXUQ3ATI4A56PGLFpeMTFkz'\nsetup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)\n####################################Twitter Auth#################################################\n\n\n\n\n####################################Load sentiments word file#################################################\nprojectDir = getwd()\ndataDir = file.path(projectDir, 'data')\nhu.liu.pos = scan(file.path(dataDir, 'opinion-lexicon-English', 'positive-words.txt'), what='character', comment.char=';')\nhu.liu.neg = scan(file.path(dataDir, 'opinion-lexicon-English', 'negative-words.txt'), what='character', comment.char=';')\npos.words = c(hu.liu.pos, 'upgrade')\nneg.words = c(hu.liu.neg, 'wtf', 'wait', 'waiting', 'epicfail', 'mechanical')\n####################################Load sentiments word file#################################################\n\ncurrentDate<-Sys.Date()\nmonth<-format(currentDate,\"%m\")\nyear<-format(currentDate,\"%Y\")\n\n\nusers_summary <- mongo(collection = \"user_info\", db = \"r_db\", url = mongoURLLocal, verbose = TRUE)\nusers<- mongo(collection = \"users\", db = \"r_db\", url = mongoURLLocal, verbose = TRUE)\n\n\n########################################Twitter Update##################################################\nupdate_tweets_sentiment <- function() {\n  users_info <- users_summary$find()\n  for(twitter_handle in users_info[[2]]) {\n    print(twitter_handle)\n    users$update( query = paste0('{\"twitter_handle\":\"', twitter_handle,'\",\"month\" : ', as.integer(month) , ',\"year\" :', year,'}'), update = paste0('{\"$set\":{\"tweets_sentiment\": ', get_tweets_sentiment(twitter_handle), '}}'))\n    users$update( query = paste0('{\"twitter_handle\":\"', twitter_handle,'\",\"month\" : ', as.integer(month) , ',\"year\" :', year,'}'), update = paste0('{\"$set\":{\"klout_score\": ', get_klout_Score(twitter_handle), '}}'))\n    \n  }\n}\n\nget_klout_Score <- function(twitter_handle) {\n  kloutScore <- RKlout(klout_api_key,twitter_handle)\n  print (kloutScore)\n}\n\nget_tweets_sentiment <- function(twitter_handle) {\n  name_mentioned <- searchTwitter(paste0(\"from:\", twitter_handle))\n  print(name_mentioned)\n  tweets.text <- sapply(name_mentioned, function(x) x$getText())\n  tweets.text <- gsub(\"rt\", \"\", tweets.text)\n  tweets.text <- gsub(\"[[:punct:]]\", \"\", tweets.text)\n  tweets.text <- gsub(\"[ |\\t]{2,}\", \"\", tweets.text)\n  tweets.text <- gsub(\"^ \", \"\", tweets.text)\n  tweets.text <- gsub(\" $\", \"\", tweets.text)\n  tweets.text <- tolower(tweets.text)\n  tweets.text.corpus <- Corpus(VectorSource(tweets.text))\n  tweets.text.corpus <- tm_map(tweets.text.corpus, function(x)removeWords(x,stopwords()))\n  length <- length (tweets.text)\n  sentiment_score <-0\n  \n  for (i in 1:length){\n    all_tweets_string <- tweets.text[[i]]\n    word.list = str_split(all_tweets_string, '\\\\s+')\n    words = unlist(word.list)\n    pos.matches = match(words, pos.words)\n    neg.matches = match(words, neg.words)\n    pos.matches = !is.na(pos.matches)\n    neg.matches = !is.na(neg.matches)\n    score = sum(pos.matches) - sum(neg.matches)\n    sentiment_score <- sentiment_score + score\n    print(score)\n  }\n  final <- sentiment_score/length\n}\n\nupdate_friends_followers_count <- function() {\n  users_info <- users$find()\n  for(twitter_handle in users_info[[2]]) {\n    users$update(query = paste0('{\"twitter_handle\":\"', twitter_handle,'\",\"month\" : ', as.integer(month) , ',\"year\" :', year,'}'), update = paste0('{\"$set\":{\"twitter_followers_count\": ', get_followers_count(twitter_handle), '}}'))\n    users$update(query = paste0('{\"twitter_handle\":\"', twitter_handle,'\",\"month\" : ', as.integer(month) , ',\"year\" :', year,'}'), update = paste0('{\"$set\":{\"twitter_friends_count\": ', get_friends_count(twitter_handle), '}}'))\n  }\n}\n\nget_followers_count <- function(twitter_handle) {\n  tweet <- getUser(twitter_handle)\n  twitter_number_of_followers <-tweet$getFollowersCount()\n}\n\nget_friends_count <- function(twitter_handle) {\n  tweet <- getUser(twitter_handle)\n  twitter_number_of_friends<-tweet$getFriendsCount()\n}\n\nupdate_tweets_sentiment()\nupdate_friends_followers_count()\n\n########################################Twitter Update##################################################\n\n\n\n\nusers_info <- users$find()\nprint(users_info)\n",
    "created" : 1512293587428.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2328370937",
    "id" : "BA6B63C4",
    "lastKnownWriteTime" : 1512311089,
    "last_content_update" : -2147483648,
    "path" : "I:/Skyline Labs/Projects/YHacks 2017/R Facebook/R_YHacks_Social.R",
    "project_path" : "R_YHacks_Social.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}